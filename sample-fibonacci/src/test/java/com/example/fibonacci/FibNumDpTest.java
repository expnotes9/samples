package com.example.fibonacci;

import static org.junit.Assert.assertEquals;

import java.math.BigDecimal;

import org.junit.Test;

public class FibNumDpTest {

	@Test
	public void fib1Test() {
		assertEquals(FibNumDp.fib1(0), new BigDecimal("0").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(1), new BigDecimal("1").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(2), new BigDecimal("1").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(3), new BigDecimal("2").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(4), new BigDecimal("3").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(5), new BigDecimal("5").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(6), new BigDecimal("8").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(7), new BigDecimal("13").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(8), new BigDecimal("21").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(9), new BigDecimal("34").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(10), new BigDecimal("55").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(11), new BigDecimal("89").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(12), new BigDecimal("144").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(13), new BigDecimal("233").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(14), new BigDecimal("377").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(15), new BigDecimal("610").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(16), new BigDecimal("987").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(17), new BigDecimal("1597").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(18), new BigDecimal("2584").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(19), new BigDecimal("4181").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(20), new BigDecimal("6765").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(21), new BigDecimal("10946").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(22), new BigDecimal("17711").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(23), new BigDecimal("28657").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(24), new BigDecimal("46368").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(25), new BigDecimal("75025").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(26), new BigDecimal("121393").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(27), new BigDecimal("196418").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(28), new BigDecimal("317811").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(29), new BigDecimal("514229").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(30), new BigDecimal("832040").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(31), new BigDecimal("1346269").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(32), new BigDecimal("2178309").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(33), new BigDecimal("3524578").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(34), new BigDecimal("5702887").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(35), new BigDecimal("9227465").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(36), new BigDecimal("14930352").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(37), new BigDecimal("24157817").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(38), new BigDecimal("39088169").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(39), new BigDecimal("63245986").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(40), new BigDecimal("102334155").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(41), new BigDecimal("165580141").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(42), new BigDecimal("267914296").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(43), new BigDecimal("433494437").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(44), new BigDecimal("701408733").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(45), new BigDecimal("1134903170").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(46), new BigDecimal("1836311903").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(47), new BigDecimal("2971215073").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(48), new BigDecimal("4807526976").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(49), new BigDecimal("7778742049").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(50), new BigDecimal("12586269025").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(51), new BigDecimal("20365011074").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(52), new BigDecimal("32951280099").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(53), new BigDecimal("53316291173").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(54), new BigDecimal("86267571272").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(55), new BigDecimal("139583862445").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(56), new BigDecimal("225851433717").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(57), new BigDecimal("365435296162").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(58), new BigDecimal("591286729879").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(59), new BigDecimal("956722026041").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(60), new BigDecimal("1548008755920").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(61), new BigDecimal("2504730781961").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(62), new BigDecimal("4052739537881").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(63), new BigDecimal("6557470319842").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(64), new BigDecimal("10610209857723").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(65), new BigDecimal("17167680177565").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(66), new BigDecimal("27777890035288").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(67), new BigDecimal("44945570212853").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(68), new BigDecimal("72723460248141").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(69), new BigDecimal("117669030460994").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(70), new BigDecimal("190392490709135").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(71), new BigDecimal("308061521170129").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(72), new BigDecimal("498454011879264").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(73), new BigDecimal("806515533049393").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(74), new BigDecimal("1304969544928657").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(75), new BigDecimal("2111485077978050").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(76), new BigDecimal("3416454622906707").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(77), new BigDecimal("5527939700884757").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(78), new BigDecimal("8944394323791464").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(79), new BigDecimal("14472334024676221").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(80), new BigDecimal("23416728348467685").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(81), new BigDecimal("37889062373143906").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(82), new BigDecimal("61305790721611591").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(83), new BigDecimal("99194853094755497").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(84), new BigDecimal("160500643816367088").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(85), new BigDecimal("259695496911122585").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(86), new BigDecimal("420196140727489673").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(87), new BigDecimal("679891637638612258").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(88), new BigDecimal("1100087778366101931").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(89), new BigDecimal("1779979416004714189").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(90), new BigDecimal("2880067194370816120").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(91), new BigDecimal("4660046610375530309").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(92), new BigDecimal("7540113804746346429").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(93), new BigDecimal("12200160415121876738").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(94), new BigDecimal("19740274219868223167").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(95), new BigDecimal("31940434634990099905").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(96), new BigDecimal("51680708854858323072").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(97), new BigDecimal("83621143489848422977").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(98), new BigDecimal("135301852344706746049").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(99), new BigDecimal("218922995834555169026").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(100), new BigDecimal("354224848179261915075").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(101), new BigDecimal("573147844013817084101").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(102), new BigDecimal("927372692193078999176").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(103), new BigDecimal("1500520536206896083277").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(104), new BigDecimal("2427893228399975082453").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(105), new BigDecimal("3928413764606871165730").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(106), new BigDecimal("6356306993006846248183").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(107), new BigDecimal("10284720757613717413913").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(108), new BigDecimal("16641027750620563662096").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(109), new BigDecimal("26925748508234281076009").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(110), new BigDecimal("43566776258854844738105").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(111), new BigDecimal("70492524767089125814114").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(112), new BigDecimal("114059301025943970552219").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(113), new BigDecimal("184551825793033096366333").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(114), new BigDecimal("298611126818977066918552").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(115), new BigDecimal("483162952612010163284885").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(116), new BigDecimal("781774079430987230203437").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(117), new BigDecimal("1264937032042997393488322").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(118), new BigDecimal("2046711111473984623691759").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(119), new BigDecimal("3311648143516982017180081").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(120), new BigDecimal("5358359254990966640871840").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(121), new BigDecimal("8670007398507948658051921").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(122), new BigDecimal("14028366653498915298923761").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(123), new BigDecimal("22698374052006863956975682").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(124), new BigDecimal("36726740705505779255899443").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(125), new BigDecimal("59425114757512643212875125").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(126), new BigDecimal("96151855463018422468774568").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(127), new BigDecimal("155576970220531065681649693").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(128), new BigDecimal("251728825683549488150424261").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(129), new BigDecimal("407305795904080553832073954").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(130), new BigDecimal("659034621587630041982498215").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(131), new BigDecimal("1066340417491710595814572169").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(132), new BigDecimal("1725375039079340637797070384").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(133), new BigDecimal("2791715456571051233611642553").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(134), new BigDecimal("4517090495650391871408712937").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(135), new BigDecimal("7308805952221443105020355490").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(136), new BigDecimal("11825896447871834976429068427").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(137), new BigDecimal("19134702400093278081449423917").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(138), new BigDecimal("30960598847965113057878492344").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(139), new BigDecimal("50095301248058391139327916261").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(140), new BigDecimal("81055900096023504197206408605").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(141), new BigDecimal("131151201344081895336534324866").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(142), new BigDecimal("212207101440105399533740733471").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(143), new BigDecimal("343358302784187294870275058337").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(144), new BigDecimal("555565404224292694404015791808").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(145), new BigDecimal("898923707008479989274290850145").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(146), new BigDecimal("1454489111232772683678306641953").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(147), new BigDecimal("2353412818241252672952597492098").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(148), new BigDecimal("3807901929474025356630904134051").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(149), new BigDecimal("6161314747715278029583501626149").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(150), new BigDecimal("9969216677189303386214405760200").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(151), new BigDecimal("16130531424904581415797907386349").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(152), new BigDecimal("26099748102093884802012313146549").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(153), new BigDecimal("42230279526998466217810220532898").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(154), new BigDecimal("68330027629092351019822533679447").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(155), new BigDecimal("110560307156090817237632754212345").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(156), new BigDecimal("178890334785183168257455287891792").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(157), new BigDecimal("289450641941273985495088042104137").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(158), new BigDecimal("468340976726457153752543329995929").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(159), new BigDecimal("757791618667731139247631372100066").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(160), new BigDecimal("1226132595394188293000174702095995").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(161), new BigDecimal("1983924214061919432247806074196061").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(162), new BigDecimal("3210056809456107725247980776292056").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(163), new BigDecimal("5193981023518027157495786850488117").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(164), new BigDecimal("8404037832974134882743767626780173").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(165), new BigDecimal("13598018856492162040239554477268290").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(166), new BigDecimal("22002056689466296922983322104048463").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(167), new BigDecimal("35600075545958458963222876581316753").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(168), new BigDecimal("57602132235424755886206198685365216").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(169), new BigDecimal("93202207781383214849429075266681969").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(170), new BigDecimal("150804340016807970735635273952047185").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(171), new BigDecimal("244006547798191185585064349218729154").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(172), new BigDecimal("394810887814999156320699623170776339").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(173), new BigDecimal("638817435613190341905763972389505493").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(174), new BigDecimal("1033628323428189498226463595560281832").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(175), new BigDecimal("1672445759041379840132227567949787325").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(176), new BigDecimal("2706074082469569338358691163510069157").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(177), new BigDecimal("4378519841510949178490918731459856482").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(178), new BigDecimal("7084593923980518516849609894969925639").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(179), new BigDecimal("11463113765491467695340528626429782121").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(180), new BigDecimal("18547707689471986212190138521399707760").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(181), new BigDecimal("30010821454963453907530667147829489881").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(182), new BigDecimal("48558529144435440119720805669229197641").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(183), new BigDecimal("78569350599398894027251472817058687522").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(184), new BigDecimal("127127879743834334146972278486287885163").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(185), new BigDecimal("205697230343233228174223751303346572685").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(186), new BigDecimal("332825110087067562321196029789634457848").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(187), new BigDecimal("538522340430300790495419781092981030533").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(188), new BigDecimal("871347450517368352816615810882615488381").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(189), new BigDecimal("1409869790947669143312035591975596518914").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(190), new BigDecimal("2281217241465037496128651402858212007295").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(191), new BigDecimal("3691087032412706639440686994833808526209").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(192), new BigDecimal("5972304273877744135569338397692020533504").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(193), new BigDecimal("9663391306290450775010025392525829059713").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(194), new BigDecimal("15635695580168194910579363790217849593217").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(195), new BigDecimal("25299086886458645685589389182743678652930").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(196), new BigDecimal("40934782466626840596168752972961528246147").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(197), new BigDecimal("66233869353085486281758142155705206899077").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(198), new BigDecimal("107168651819712326877926895128666735145224").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(199), new BigDecimal("173402521172797813159685037284371942044301").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(200), new BigDecimal("280571172992510140037611932413038677189525").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(201), new BigDecimal("453973694165307953197296969697410619233826").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(202), new BigDecimal("734544867157818093234908902110449296423351").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(203), new BigDecimal("1188518561323126046432205871807859915657177").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(204), new BigDecimal("1923063428480944139667114773918309212080528").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(205), new BigDecimal("3111581989804070186099320645726169127737705").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(206), new BigDecimal("5034645418285014325766435419644478339818233").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(207), new BigDecimal("8146227408089084511865756065370647467555938").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(208), new BigDecimal("13180872826374098837632191485015125807374171").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(209), new BigDecimal("21327100234463183349497947550385773274930109").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(210), new BigDecimal("34507973060837282187130139035400899082304280").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(211), new BigDecimal("55835073295300465536628086585786672357234389").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(212), new BigDecimal("90343046356137747723758225621187571439538669").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(213), new BigDecimal("146178119651438213260386312206974243796773058").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(214), new BigDecimal("236521166007575960984144537828161815236311727").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(215), new BigDecimal("382699285659014174244530850035136059033084785").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(216), new BigDecimal("619220451666590135228675387863297874269396512").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(217), new BigDecimal("1001919737325604309473206237898433933302481297").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(218), new BigDecimal("1621140188992194444701881625761731807571877809").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(219), new BigDecimal("2623059926317798754175087863660165740874359106").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(220), new BigDecimal("4244200115309993198876969489421897548446236915").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(221), new BigDecimal("6867260041627791953052057353082063289320596021").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(222), new BigDecimal("11111460156937785151929026842503960837766832936").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(223), new BigDecimal("17978720198565577104981084195586024127087428957").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(224), new BigDecimal("29090180355503362256910111038089984964854261893").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(225), new BigDecimal("47068900554068939361891195233676009091941690850").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(226), new BigDecimal("76159080909572301618801306271765994056795952743").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(227), new BigDecimal("123227981463641240980692501505442003148737643593").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(228), new BigDecimal("199387062373213542599493807777207997205533596336").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(229), new BigDecimal("322615043836854783580186309282650000354271239929").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(230), new BigDecimal("522002106210068326179680117059857997559804836265").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(231), new BigDecimal("844617150046923109759866426342507997914076076194").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(232), new BigDecimal("1366619256256991435939546543402365995473880912459").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(233), new BigDecimal("2211236406303914545699412969744873993387956988653").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(234), new BigDecimal("3577855662560905981638959513147239988861837901112").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(235), new BigDecimal("5789092068864820527338372482892113982249794889765").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(236), new BigDecimal("9366947731425726508977331996039353971111632790877").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(237), new BigDecimal("15156039800290547036315704478931467953361427680642").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(238), new BigDecimal("24522987531716273545293036474970821924473060471519").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(239), new BigDecimal("39679027332006820581608740953902289877834488152161").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(240), new BigDecimal("64202014863723094126901777428873111802307548623680").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(241), new BigDecimal("103881042195729914708510518382775401680142036775841").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(242), new BigDecimal("168083057059453008835412295811648513482449585399521").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(243), new BigDecimal("271964099255182923543922814194423915162591622175362").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(244), new BigDecimal("440047156314635932379335110006072428645041207574883").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(245), new BigDecimal("712011255569818855923257924200496343807632829750245").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(246), new BigDecimal("1152058411884454788302593034206568772452674037325128").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(247), new BigDecimal("1864069667454273644225850958407065116260306867075373").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(248), new BigDecimal("3016128079338728432528443992613633888712980904400501").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(249), new BigDecimal("4880197746793002076754294951020699004973287771475874").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(250), new BigDecimal("7896325826131730509282738943634332893686268675876375").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(251), new BigDecimal("12776523572924732586037033894655031898659556447352249").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(252), new BigDecimal("20672849399056463095319772838289364792345825123228624").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(253), new BigDecimal("33449372971981195681356806732944396691005381570580873").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(254), new BigDecimal("54122222371037658776676579571233761483351206693809497").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(255), new BigDecimal("87571595343018854458033386304178158174356588264390370").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(256), new BigDecimal("141693817714056513234709965875411919657707794958199867").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(257), new BigDecimal("229265413057075367692743352179590077832064383222590237").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(258), new BigDecimal("370959230771131880927453318055001997489772178180790104").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(259), new BigDecimal("600224643828207248620196670234592075321836561403380341").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(260), new BigDecimal("971183874599339129547649988289594072811608739584170445").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(261), new BigDecimal("1571408518427546378167846658524186148133445300987550786").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(262), new BigDecimal("2542592393026885507715496646813780220945054040571721231").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(263), new BigDecimal("4114000911454431885883343305337966369078499341559272017").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(264), new BigDecimal("6656593304481317393598839952151746590023553382130993248").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(265), new BigDecimal("10770594215935749279482183257489712959102052723690265265").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(266), new BigDecimal("17427187520417066673081023209641459549125606105821258513").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(267), new BigDecimal("28197781736352815952563206467131172508227658829511523778").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(268), new BigDecimal("45624969256769882625644229676772632057353264935332782291").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(269), new BigDecimal("73822750993122698578207436143903804565580923764844306069").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(270), new BigDecimal("119447720249892581203851665820676436622934188700177088360").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(271), new BigDecimal("193270471243015279782059101964580241188515112465021394429").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(272), new BigDecimal("312718191492907860985910767785256677811449301165198482789").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(273), new BigDecimal("505988662735923140767969869749836918999964413630219877218").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(274), new BigDecimal("818706854228831001753880637535093596811413714795418360007").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(275), new BigDecimal("1324695516964754142521850507284930515811378128425638237225").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(276), new BigDecimal("2143402371193585144275731144820024112622791843221056597232").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(277), new BigDecimal("3468097888158339286797581652104954628434169971646694834457").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(278), new BigDecimal("5611500259351924431073312796924978741056961814867751431689").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(279), new BigDecimal("9079598147510263717870894449029933369491131786514446266146").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(280), new BigDecimal("14691098406862188148944207245954912110548093601382197697835").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(281), new BigDecimal("23770696554372451866815101694984845480039225387896643963981").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(282), new BigDecimal("38461794961234640015759308940939757590587318989278841661816").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(283), new BigDecimal("62232491515607091882574410635924603070626544377175485625797").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(284), new BigDecimal("100694286476841731898333719576864360661213863366454327287613").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(285), new BigDecimal("162926777992448823780908130212788963731840407743629812913410").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(286), new BigDecimal("263621064469290555679241849789653324393054271110084140201023").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(287), new BigDecimal("426547842461739379460149980002442288124894678853713953114433").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(288), new BigDecimal("690168906931029935139391829792095612517948949963798093315456").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(289), new BigDecimal("1116716749392769314599541809794537900642843628817512046429889").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(290), new BigDecimal("1806885656323799249738933639586633513160792578781310139745345").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(291), new BigDecimal("2923602405716568564338475449381171413803636207598822186175234").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(292), new BigDecimal("4730488062040367814077409088967804926964428786380132325920579").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(293), new BigDecimal("7654090467756936378415884538348976340768064993978954512095813").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(294), new BigDecimal("12384578529797304192493293627316781267732493780359086838016392").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(295), new BigDecimal("20038668997554240570909178165665757608500558774338041350112205").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(296), new BigDecimal("32423247527351544763402471792982538876233052554697128188128597").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(297), new BigDecimal("52461916524905785334311649958648296484733611329035169538240802").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(298), new BigDecimal("84885164052257330097714121751630835360966663883732297726369399").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(299), new BigDecimal("137347080577163115432025771710279131845700275212767467264610201").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
		assertEquals(FibNumDp.fib1(300), new BigDecimal("222232244629420445529739893461909967206666939096499764990979600").divideAndRemainder(BigDecimal.valueOf(FibNumDp.DIV))[1].longValue());
	}

	@Test
	public void fib2Test() {
		for (int i = 0; i <= 9000; i += 100) {
			assertEquals(FibNumDp.fib1(i), FibNumDp.fib2(i));
		}
	}

}
